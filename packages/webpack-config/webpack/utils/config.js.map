{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/utils/config.ts"],"names":[],"mappings":";;AAAa,QAAA,aAAa,GAAG;IAC3B,wDAAwD;IACxD,eAAe,EAAE,kBAAkB;IACnC,iCAAiC,EAAE,uCAAuC;IAC1E,kEAAkE;IAClE,wBAAwB;IACxB,mDAAmD,EAAE,sCAAsC;IAC3F,8CAA8C,EAAE,uCAAuC;IACvF,kDAAkD,EAAE,qCAAqC;IACzF,0DAA0D;IAC1D,4DAA4D,EAC1D,uDAAuD;IACzD,4DAA4D,EAC1D,oFAAoF;IACtF,qDAAqD,EACnD,gEAAgE;IAClE,gEAAgE,EAC9D,2EAA2E;IAC7E,yDAAyD,EACvD,8DAA8D;CACjE,CAAC;AAEF,SAAS,QAAQ,CAAC,GAAQ;IACxB,IAAI,GAAG,KAAK,IAAI,EAAE;QAChB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC;AAC9D,CAAC;AAED;;;;;GAKG;AAEH,SAAgB,0BAA0B,CACxC,IAAS,EACT,MAAwC,EACxC,QAAiB,KAAK;IAEtB,mBAAmB;IACnB,IAAI,IAAI,EAAE;QACR,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;YAClB,IAAI,KAAK,EAAE;gBACT,IAAI,MAAM,IAAI,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;oBAChD,MAAM,IAAI,KAAK,CAAC,kDAAkD,GAAG,MAAM,CAAC,CAAC;iBAC9E;gBACD,yBACK,MAAM,EACN,IAAI,EACP;aACH;YAED,kBAAkB;YAClB,OAAO,IAAI,CAAC;SACb;QAED,gFAAgF;QAChF,OAAO,MAAM,CAAC;KACf;IACD,iBAAiB;IACjB,OAAO,IAAI,CAAC;AACd,CAAC;AA3BD,gEA2BC;AAED;;GAEG;AACH,SAAgB,4BAA4B,CAC1C,IAAS,EACT,MAAwC,EACxC,QAAiB,KAAK;IAEtB,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,OAAO,MAAM,CAAC;KACf;IACD,OAAO,0BAA0B,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACzD,CAAC;AATD,oEASC","sourcesContent":["export const DEFAULT_ALIAS = {\n  // Alias direct react-native imports to react-native-web\n  'react-native$': 'react-native-web',\n  '@react-native-community/netinfo': 'react-native-web/dist/exports/NetInfo',\n  // Add polyfills for modules that react-native-web doesn't support\n  // Depends on expo-asset\n  'react-native/Libraries/Image/AssetSourceResolver$': 'expo-asset/build/AssetSourceResolver',\n  'react-native/Libraries/Image/assetPathUtils$': 'expo-asset/build/Image/assetPathUtils',\n  'react-native/Libraries/Image/resolveAssetSource$': 'expo-asset/build/resolveAssetSource',\n  // Alias internal react-native modules to react-native-web\n  'react-native/Libraries/Components/View/ViewStylePropTypes$':\n    'react-native-web/dist/exports/View/ViewStylePropTypes',\n  'react-native/Libraries/EventEmitter/RCTDeviceEventEmitter$':\n    'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter',\n  'react-native/Libraries/vendor/emitter/EventEmitter$':\n    'react-native-web/dist/vendor/react-native/emitter/EventEmitter',\n  'react-native/Libraries/vendor/emitter/EventSubscriptionVendor$':\n    'react-native-web/dist/vendor/react-native/emitter/EventSubscriptionVendor',\n  'react-native/Libraries/EventEmitter/NativeEventEmitter$':\n    'react-native-web/dist/vendor/react-native/NativeEventEmitter',\n};\n\nfunction isObject(val: any): boolean {\n  if (val === null) {\n    return false;\n  }\n  return typeof val === 'function' || typeof val === 'object';\n}\n\n/**\n * Given a config option that could evalutate to true, config, or null; return a config.\n * e.g.\n * `polyfill: true` returns the `config`\n * `polyfill: {}` returns `{}`\n */\n\nexport function enableWithPropertyOrConfig(\n  prop: any,\n  config: boolean | { [key: string]: any },\n  merge: boolean = false\n): any {\n  // Value is truthy.\n  if (prop) {\n    if (isObject(prop)) {\n      if (merge) {\n        if (config == null || typeof config !== 'object') {\n          throw new Error('enableWithPropertyOrConfig cannot merge config: ' + config);\n        }\n        return {\n          ...config,\n          ...prop,\n        };\n      }\n\n      // Return property\n      return prop;\n    }\n\n    // Value is truthy but not a replacement config, thus return the default config.\n    return config;\n  }\n  // Return falsey.\n  return prop;\n}\n\n/**\n * Used for features that are enabled by default unless specified otherwise.\n */\nexport function overrideWithPropertyOrConfig(\n  prop: any,\n  config: boolean | { [key: string]: any },\n  merge: boolean = false\n): any {\n  if (prop === undefined) {\n    return config;\n  }\n  return enableWithPropertyOrConfig(prop, config, merge);\n}\n"]}