{"version":3,"file":"withWorkbox.js","sourceRoot":"","sources":["../src/withWorkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { readFile, writeFile, ensureDir } from 'fs-extra';\nimport { join } from 'path';\nimport { Entry } from 'webpack';\nimport {\n  GenerateSW,\n  GenerateSWOptions,\n  InjectManifest,\n  InjectManifestOptions,\n} from 'workbox-webpack-plugin';\n\nimport { AnyConfiguration } from './types';\nimport { isEntry } from './utils/loaders';\nimport { getPaths } from './utils';\n\nexport type OfflineOptions = {\n  projectRoot?: string;\n  serviceWorkerPath?: string;\n  autoRegister?: boolean;\n  dev?: boolean;\n  // https://developers.google.com/web/ilt/pwa/introduction-to-service-worker#registration_and_scope\n  publicUrl?: string;\n  scope?: string;\n  // when `true` then `generateSWOptions` is used, otherwise `injectManifestOptions` is used.\n  useServiceWorker?: boolean;\n  generateSWOptions?: GenerateSWOptions;\n  injectManifestOptions?: InjectManifestOptions;\n};\n\nconst defaultInjectManifestOptions = {\n  exclude: [\n    /\\.LICENSE$/,\n    /\\.map$/,\n    /asset-manifest\\.json$/,\n    // Exclude all apple touch images because they're cached locally after the PWA is added.\n    /^\\bapple.*\\.png$/,\n  ],\n};\n\nconst runtimeCache = {\n  handler: 'networkFirst',\n  urlPattern: /^https?.*/,\n  options: {\n    cacheName: 'offlineCache',\n    expiration: {\n      maxEntries: 200,\n    },\n  },\n};\n\nconst defaultGenerateSWOptions: GenerateSWOptions = {\n  ...defaultInjectManifestOptions,\n  clientsClaim: true,\n  skipWaiting: true,\n  navigateFallbackBlacklist: [\n    // Exclude URLs starting with /_, as they're likely an API call\n    new RegExp('^/_'),\n    // Exclude URLs containing a dot, as they're likely a resource in\n    // public/ and not a SPA route\n    new RegExp('/[^/]+\\\\.[^/]+$'),\n  ],\n  // @ts-ignore: Webpack throws if `NetworkFirst` is not `networkFirst`\n  runtimeCaching: [runtimeCache],\n};\n\nexport async function ensureEntryAsync(arg: any): Promise<Entry> {\n  if (typeof arg === 'undefined') {\n    throw new Error('Webpack config entry cannot be undefined');\n  }\n\n  if (typeof arg === 'function') {\n    return ensureEntryAsync(await arg());\n  } else if (typeof arg === 'string') {\n    return ensureEntryAsync([arg]);\n  } else if (Array.isArray(arg)) {\n    return {\n      app: arg,\n    };\n  } else if (isEntry(arg)) {\n    return arg;\n  }\n\n  throw new Error('Cannot resolve Webpack config entry prop: ' + arg);\n}\n\nexport default function withWorkbox(\n  config: AnyConfiguration,\n  options: OfflineOptions = {}\n): AnyConfiguration {\n  // Do nothing in dev mode\n  if (config.mode !== 'production') {\n    return config;\n  }\n\n  if (!config.plugins) config.plugins = [];\n\n  const {\n    projectRoot,\n    autoRegister = true,\n    publicUrl = '',\n    scope = '/',\n    useServiceWorker = true,\n    generateSWOptions = {},\n    injectManifestOptions = {},\n  } = options;\n\n  const locations = getPaths(projectRoot!);\n\n  const customManifestProps = {\n    navigateFallback: join(publicUrl, 'index.html'),\n  };\n\n  if (useServiceWorker) {\n    config.plugins.push(\n      new GenerateSW({\n        ...defaultGenerateSWOptions,\n        ...customManifestProps,\n        ...generateSWOptions,\n      })\n    );\n  } else {\n    const props = {\n      ...defaultInjectManifestOptions,\n      ...customManifestProps,\n      ...injectManifestOptions,\n    };\n\n    config.plugins.push(\n      // @ts-ignore: unused swSrc\n      new InjectManifest(props)\n    );\n  }\n\n  const expoEntry = config.entry;\n  config.entry = async () => {\n    const entries = await ensureEntryAsync(expoEntry);\n    const swPath = join(locations.production.folder, 'register-service-worker.js');\n    if (entries.app && !entries.app.includes(swPath) && autoRegister) {\n      const content = (await readFile(\n        require.resolve('../web-default/register-service-worker.js'),\n        'utf8'\n      ))\n        .replace('SW_PUBLIC_URL', publicUrl)\n        .replace('SW_PUBLIC_SCOPE', scope);\n      await ensureDir(locations.production.folder);\n      await writeFile(swPath, content, 'utf8');\n\n      if (!Array.isArray(entries.app)) {\n        entries.app = [entries.app];\n      }\n      entries.app.unshift(swPath);\n    }\n    return entries;\n  };\n\n  return config;\n}\n"]}